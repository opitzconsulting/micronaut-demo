plugins {
    id "com.github.johnrengelman.shadow" version "6.0.0"
    id "io.micronaut.application" version '1.0.5'
}

version "0.1"
group "com.opitzconsulting.demo.micronaut"

repositories {
    mavenCentral()
    jcenter()
}

configurations {
    // for dependencies that are needed for development only
    developmentOnly
}

dependencies {
    implementation("io.micronaut:micronaut-validation")
    implementation("io.micronaut:micronaut-runtime")
    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut.sql:micronaut-jdbc-hikari")
    implementation("org.mybatis:mybatis:3.4.6")
    implementation("ch.qos.logback:logback-classic")
    implementation("io.micronaut.flyway:micronaut-flyway")
    implementation group: 'org.postgresql', name: 'postgresql', version: '42.2.18'
    implementation 'javax.annotation:javax.annotation-api:1.3.2'

    testAnnotationProcessor "io.micronaut:micronaut-inject-java"
    testImplementation("org.junit.jupiter:junit-jupiter-api")
    testImplementation("io.micronaut.test:micronaut-test-junit5")
    testImplementation "org.mockito:mockito-junit-jupiter:2.22.0"
    testImplementation group: 'org.assertj', name: 'assertj-core', version: '3.18.0'
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.7.0")
}

shadowJar {
    mergeServiceFiles()
}

test.classpath += configurations.developmentOnly

mainClassName = "com.opitzconsulting.demo.micronaut.TechnologyApplication"

// use JUnit 5 platform
test {
    useJUnitPlatform()
}

micronaut {
    runtime "netty"
    version "2.1.2"
}

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

