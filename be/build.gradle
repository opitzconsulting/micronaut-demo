plugins {
    id "com.diffplug.eclipse.apt" version "3.22.0"
    id "com.github.johnrengelman.shadow" version "6.0.0"
    id "application"
}

version "0.1"
group "com.example"

repositories {
    mavenCentral()
    jcenter()
}

configurations {
    // for dependencies that are needed for development only
    developmentOnly
}

dependencies {
    annotationProcessor(platform("io.micronaut:micronaut-bom:2.0.3"))
    annotationProcessor("io.micronaut:micronaut-inject-java")
    annotationProcessor("io.micronaut:micronaut-validation")
    implementation(platform("io.micronaut:micronaut-bom:2.0.3"))
    implementation("io.micronaut:micronaut-inject")
    implementation("io.micronaut:micronaut-validation")
    compile 'io.micronaut:micronaut-http-server-netty:2.0.3'
    compile group: 'io.micronaut', name: 'micronaut-http-client', version: '2.0.3'
    implementation("io.micronaut:micronaut-runtime")
    implementation("javax.annotation:javax.annotation-api")
    implementation("io.micronaut:micronaut-http-server-netty")
    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut.sql:micronaut-jdbc-hikari")
    runtimeOnly("ch.qos.logback:logback-classic")
    testAnnotationProcessor(enforcedPlatform("io.micronaut:micronaut-bom:2.0.3"))
    testAnnotationProcessor("io.micronaut:micronaut-inject-java")
    testImplementation(enforcedPlatform("io.micronaut:micronaut-bom:2.0.3"))
    testImplementation("org.junit.jupiter:junit-jupiter-api")
    testCompile "io.micronaut.test:micronaut-test-junit5:2.0.0"
    testCompile "org.mockito:mockito-junit-jupiter:2.22.0"
    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-params', version: '5.2.0'
    testRuntime "org.junit.jupiter:junit-jupiter-engine:5.1.0"
    testCompile group: 'org.testng', name: 'testng', version: '6.14.3'
    implementation 'org.mybatis:mybatis:3.4.6'
    compile group: 'org.postgresql', name: 'postgresql', version: '42.2.8.jre7'
    compile group: 'org.testcontainers', name: 'postgresql', version: '1.12.5'



}

shadowJar {
    mergeServiceFiles()
}

test.classpath += configurations.developmentOnly

mainClassName = "com.opitzconsulting.demo.micronaut.TechnologyApplication"

// use JUnit 5 platform
test {
    useJUnitPlatform()
}

jar {
    archiveName 'be-0.1-all.jar'
    manifest {
        attributes(

                'Main-Class': 'com.opitzconsulting.demo.micronaut.TechnologyApplication'
        )
    }
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }

    doLast {
        println "$buildDir"
        println "$jar.archiveName"
        println "Copy jar file build/libs/$jar.archiveName to docker directory!"
        copy {
            from "build/libs/$jar.archiveName"
            into "$buildDir/../docker"
            rename("$jar.archiveName", "app.jar")
        }
    }
}
